{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(conda activate:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(pip install:*)",
      "Bash(ls:*)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(chmod:*)",
      "Bash(source:*)",
      "Bash(/opt/miniconda3/bin/conda info --envs)",
      "Bash(conda info:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(rg:*)",
      "Bash(kill:*)",
      "Bash(diff:*)",
      "Bash(# Move server management tests to proper location\nmv test_server_management.py openai_server/tests/\nmv test_server_management_complete.py openai_server/tests/\nmv test_manage_servers.py openai_server/tests/\nmv test_server_connectivity.py openai_server/tests/\n\n# Move manage_servers.py to openai_server utilities\nmv manage_servers.py openai_server/\n\n# The root test files seem to be backward compatibility wrappers, so remove them\nrm -f test_openai_server.py test_integrated_openai_server.py\n\necho \"Test files reorganized successfully\")",
      "Bash(# Create examples directory\nmkdir -p openai_server/examples\n\n# Move sanity check example\nmv sanity_check_example.py openai_server/examples/\n\n# The init_openai_server.py is a backward compatibility wrapper, so we can keep it in root for now\n\n# Let's also check the openai_server/tests directory structure\necho \"Updated structure:\"\ntree openai_server/ -I __pycache__)",
      "Bash(# Show the structure without tree command\necho \"OpenAI Server Structure:\"\necho \"=======================\"\nfind openai_server -type f -name \"*.py\" | grep -v __pycache__ | sort)",
      "Bash(# Check for temporary run scripts\nls -la run_*.py 2>/dev/null | head -10)",
      "Bash(# Create experiments directory\nmkdir -p experiments/neural_emotion\n\n# Move experiment run scripts\nmv run_*scenario*.py experiments/neural_emotion/\nmv run_anger_300.py experiments/neural_emotion/\nmv run_neural_emotion_experiment.py experiments/neural_emotion/\n\n# Keep the compatibility test in a tests directory\nmkdir -p tests\nmv run_complete_compatibility_test.py tests/\n\necho \"Experiment scripts organized\")",
      "Bash(# Check for server log files\nls -la *server*.log 2>/dev/null | head -10)",
      "Bash(# Create logs directory and move server logs\nmkdir -p logs/server\nmv *server*.log logs/server/\n\necho \"Server logs moved to logs/server/\")",
      "Bash(# Check and move nohup files\nif [ -f nohup.out ]; then\n    mv nohup.out logs/\n    echo \"Moved nohup.out to logs/\"\nfi\n\n# Final check - list remaining test files in root\necho \"Remaining test files in root directory:\"\nls -la test*.py 2>/dev/null || echo \"No test files found in root\")",
      "Bash(# Create neuro_manipulation tests directory if needed\nmkdir -p neuro_manipulation/tests\n\n# Move RepControl and vLLM tests\nmv test_repcontrol_api.py neuro_manipulation/tests/\nmv test_vllm_repcontrol_api.py neuro_manipulation/tests/\nmv test_vllm.py neuro_manipulation/tests/\n\necho \"vLLM and RepControl tests moved to neuro_manipulation/tests/\")",
      "Bash(make test-unit:*)",
      "Bash(make:*)",
      "Bash(/usr/local/anaconda3/bin/conda env list)",
      "Bash(nvidia-smi:*)",
      "Bash(echo:*)",
      "Bash(/data/home/jjl7137/miniforge3/envs/llm_fresh/bin/python analyze_choice_differences.py)",
      "Bash(conda:*)",
      "Bash(/home/jjl7137/.conda/envs/llm_fresh/bin/python examples/run_choice_selection_experiment.py)",
      "Bash(./openai_server/start_emotion_servers.sh:*)",
      "Bash(./openai_server/start_emotion_servers_single_gpu.sh:*)",
      "Bash(# Move analysis scripts\nmv analyze_choice_differences.py result_analysis/\nmv analyze_choice_patterns.py result_analysis/\nmv analyze_switches_detailed.py result_analysis/\nmv debug_data_structure.py result_analysis/\n\n# Move analysis results\nmv detailed_switches_ao_ca.csv result_analysis/\nmv detailed_switches_with_prompts.csv result_analysis/\nmv choice_difference_analysis.csv result_analysis/ 2>/dev/null || true\nmv choice_switches_all_conditions.csv result_analysis/ 2>/dev/null || true\n\n# Move comparison scripts\nmv compare_emotion_results.py result_analysis/ 2>/dev/null || true\nmv run_emotion_comparison.py result_analysis/ 2>/dev/null || true\n\necho \"Files moved to result_analysis/\")",
      "Bash(# Remove temporary debug scripts\nrm -f debug_choice_experiment.py\n\n# Clean up log files\nrm -f choice_selection_experiment_output.log\nrm -f choice_selection_run.log\n\n# Remove any swap files\nrm -f .api_configs.py.swp\n\necho \"Temporary files cleaned up\")",
      "Bash(CUDA_VISIBLE_DEVICES=2,3 python examples/run_option_probability_experiment.py)",
      "Bash(CUDA_VISIBLE_DEVICES=2,3 /home/jjl7137/.conda/envs/llm_fresh/bin/python examples/run_option_probability_experiment.py)",
      "Bash(rm:*)",
      "WebFetch(domain:qwenlm.github.io)",
      "mcp__graphiti__add_memory",
      "Bash(/usr/local/anaconda3/bin/conda run -n llm_fresh python openai_server/manage_servers.py)",
      "Bash(/usr/local/anaconda3/bin/conda run:*)",
      "Bash(bash:*)",
      "Bash(timeout:*)",
      "Bash(cat:*)",
      "Bash(PYTHONPATH=. python openai_server/tests/graceful_test_suite.py --server-url http://localhost:8000/v1 --model-name Qwen2.5-0.5B-anger)",
      "Bash(PYTHONPATH=. timeout 300 python openai_server/tests/stress_test_suite.py --server-url http://localhost:8000/v1 --model-name Qwen2.5-0.5B-anger)",
      "Bash(PYTHONPATH=. python openai_server/run_stress_tests.py)",
      "Bash(PYTHONPATH=. python openai_server/tests/test_stage2_implementation.py)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "graphiti"
  ]
}